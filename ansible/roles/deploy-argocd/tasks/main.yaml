---
- name: Install pip if not present
  ansible.builtin.package:
    name: python3-pip
    state: present

- name: Install kubernetes Python package
  ansible.builtin.pip:
    name: kubernetes
    state: present

- name: Verify kubernetes package installation
  ansible.builtin.command: python3 -c "import kubernetes"
  register: import_check
  changed_when: false
  ignore_errors: true

- name: Display result
  ansible.builtin.debug:
    msg: "Kubernetes Python library is now installed and importable."
  when: import_check.rc == 0

- name: Create namespace
  set_fact:
    home_dir: "{{ lookup('env', 'HOME') }}"
  kubernetes.core.k8s:
    kind: Namespace
    name: argocd
    state: present
    kubeconfig: "{{ home_dir }}/.kube/config"

- name: Download ArgoCD manifest
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
    dest: /tmp/argocd-install.yaml

- name: Apply ArgoCD manifest
  ansible.builtin.command:
    cmd: kubectl apply -n argocd -f /tmp/argocd-install.yaml
  register: kubectl_result
  changed_when: "'created' in kubectl_result.stderr or 'configured' in kubectl_result.stderr"

- name: Create LoadBalancer service for ArgoCD
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: argocd-server-lb
        namespace: argocd
      spec:
        type: LoadBalancer
        ports:
        - port: 443
          targetPort: 8080
        selector:
          app.kubernetes.io/name: argocd-server

- name: Wait for LoadBalancer IP
  kubernetes.core.k8s:
    api_version: v1
    kind: Service
    name: argocd-server-lb
    namespace: argocd
  register: lb_service
  until: lb_service.result.status.loadBalancer.ingress is defined
  retries: 30
  delay: 10

- name: Get ArgoCD admin password
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: argocd-initial-admin-secret
    namespace: argocd
  register: argocd_secret

- name: Display ArgoCD access information
  debug:
    msg: 
      - "ArgoCD is accessible at https://{{ lb_service.result.status.loadBalancer.ingress[0].ip }}"
      - "ArgoCD admin password: {{ argocd_secret.resources[0].data.password | b64decode }}"
